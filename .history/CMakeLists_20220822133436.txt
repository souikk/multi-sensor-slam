cmake_minimum_required(VERSION 3.5)
project(localization)

# Default to C99
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()
#对应需要编译cpp的文件路径
file(GLOB_RECURSE ALL_SRCS "src/*.cpp")
file(GLOB_RECURSE MAIN_SRCS "src/*_main.cpp")
list(REMOVE_ITEM ALL_SRCS ${MAIN_SRCS})

set(WORKSPACE_PATH ${PROJECT_SOURCE_DIR})
configure_file(${PROJECT_SOURCE_DIR}/include/localization/global_path/global_path.h.in ${PROJECT_BINARY_DIR}/include/global_path.h)

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(sensor_msgs REQUIRED)


include_directories(${PROJECT_SOURCE_DIR}/include/localization)
include_directories(${PROJECT_BINARY_DIR}/include)
add_executable(preprocess_data src/apps/preprocess_data_main.cpp ${ALL_SRCS})
ament_target_dependencies(front_end rclcpp sensor_msgs)
add_executable(front_end src/apps/front_end_main.cpp ${ALL_SRCS})
ament_target_dependencies(front_end rclcpp sensor_msgs)
install(TARGETS
  front_end
  DESTINATION lib/${PROJECT_NAME})






ament_package()
